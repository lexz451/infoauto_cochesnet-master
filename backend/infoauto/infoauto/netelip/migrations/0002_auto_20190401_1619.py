# Generated by Django 2.1 on 2019-04-01 14:19

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields


class Migration(migrations.Migration):

    dependencies = [
        ('netelip', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Command',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_initial', models.BooleanField(default=False)),
                ('is_error', models.BooleanField(default=False)),
                ('dtmf', models.CharField(blank=True, max_length=255, null=True)),
                ('command', models.CharField(choices=[('hangup', 'hangup: Cuelga la llamada en curso'), ('busy', 'busy: Dar señal de ocupado en la llamada actual. Valor de 0 a 30. Por defecto 30 segundos.'), ('congestion', 'congestion: Dar señal de congestión en la red en la llamada actual. Valor de 0 a 30. Por defecto 30 segundos.'), ('play', "play: Reproduce sonido guardado en vPBX (tipo de localización 'local') o en servidor web remoto (tipo de localización 'remote'). Se pueden reproducir varios fcheros de forma secuencial poniendo como separador entre fcheros '&' (solo disponible para localización 'local')"), ('language', "language: Establece el idioma para las locuciones predeterminadas cuando una llamada se desvía a vPBX, como puede ser 'Por favor deje su mensaje después de la señal'. Por defecto el idioma es el inglés (en)."), ('speak', 'speak: Reproduce el texto con la voz que se especifca (Text to speech). Importante: La velocidad de reproducción de la voz solo aplica a google pudiendo ser 1, la más lenta, hasta 2 la más rápida.'), ('voicemail', "voicemail: Deja un mensaje en el buzón de voz de una o varias extensiones de vPBX. Si se añade varias extensiones, estas deben ir separadas por '&'."), ('queue', 'queue: Transfere una llamada a una cola de llamadas existente en vPBX con o sin prioridad.'), ('play_getdtmf', "play_getdtmf: Reproduce un fchero de audio guardado en vPBX (tipo de localización 'local') o en servidor web remoto (tipo de localización 'remote') esperando a que sea marcada una opción por DTMF."), ('ivr', 'ivr: Transfere una llamada a un IVR existente en vPBX.'), ('conferenceroom', 'conferenceroom: Transfere la llamada a su sala de conferencias de vPBX.'), ('speak_getdtmf', 'speak_getdtmf: Reproduce un texto con la voz que se especifica (Text to speech) esperando a que sea marcada una opción. Importante: La velocidad de reproducción de la voz solo aplica a google pudiendo ser 1, la más lenta, hasta 2 la más rápida.'), ('record', 'record: Inicia la grabación de la llamada y finalizará cuando finalice la llamada.'), ('callerid', 'callerid: Cambia el identificador llamada en previo a un desvío o transferencia.'), ('dial', 'dial: Hace una llamada a un destino, ya sea extensión de vPBX, teléfono de la red pública o extensión de un servidor SIP.'), ('google_voice2text', 'google_voice2text: Se utiliza el servicio de reconocimiento de voz de google para convertir la voz del llamante o llamado en texto legible por la aplicación del cliente.'), ('send_dtmf', 'send_dtmf: Genera tonos DTMF en la llamada en curso.')], max_length=255)),
                ('options', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Command',
                'verbose_name_plural': 'Commands',
            },
        ),
        migrations.CreateModel(
            name='Flow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('type', models.CharField(choices=[('c2c', 'Click2Call'), ('flow', 'Flujo')], default='flow', max_length=255)),
                ('is_default', models.BooleanField(default=False)),
                ('allowed', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=255)),
                ('slug', models.SlugField(blank=True, editable=False, null=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Flow',
                'verbose_name_plural': 'Flows',
            },
        ),
        migrations.AddField(
            model_name='command',
            name='flow',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='netelip.Flow'),
        ),
        migrations.AddField(
            model_name='command',
            name='prev_commands',
            field=models.ManyToManyField(blank=True, related_name='next_commands', to='netelip.Command'),
        ),
    ]
