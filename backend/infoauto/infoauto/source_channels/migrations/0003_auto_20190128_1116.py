# Generated by Django 2.1 on 2019-01-28 10:16
from django.core.exceptions import ObjectDoesNotExist, MultipleObjectsReturned
from django.db import migrations


def get_origin(lead, phone_model, email_model):
    origin = None
    if lead.concession_phone:
        try:
            origin = phone_model.objects.get(number=lead.concession_phone).origin
        except phone_model.DoesNotExist:
            pass
    elif lead.concession_email:
        try:
            origin = email_model.objects.get(email=lead.concession_email).origin
        except email_model.DoesNotExist:
            pass
    return origin


def migrate_data(apps, schema_editor):
    Source = apps.get_model('source_channels', 'Source')
    Concessionaire = apps.get_model('leads', 'Concessionaire')
    concession_queryset = Concessionaire.objects.all()
    Channel = apps.get_model('source_channels', 'Channel')
    Lead = apps.get_model('leads', 'Lead')
    Phone = apps.get_model('leads', 'Phone')
    Email = apps.get_model('leads', 'Email')
    for concession in concession_queryset:
        channel = Channel.objects.get(slug='phone')
        for phone in concession.phones.all():
            if phone.origin and phone.number:
                Source.objects.get_or_create(
                    channel=channel, data=phone.number, origin=phone.origin, concession=concession)
        channel = Channel.objects.get(slug='email')
        for email in concession.emails.all():
            if email.origin and email.email:
                Source.objects.get_or_create(
                    channel=channel, data=email.email, origin=email.origin, concession=concession)
        lead_queryset = Lead.objects.filter(concessionaire=concession)
        for lead in lead_queryset:
            if lead.concession_phone:
                query = {'data': lead.concession_phone,
                         'origin': get_origin(lead, phone_model=Phone, email_model=Email),
                         'concession': concession, 'channel__slug': 'phone'}
                try:
                    source = Source.objects.get(**query)
                except (ObjectDoesNotExist, MultipleObjectsReturned):
                    source = None
            elif lead.concession_email:
                query = {'data': lead.concession_email,
                         'origin': get_origin(lead, phone_model=Phone, email_model=Email),
                         'concession': concession, 'channel__slug': 'email'}
                try:
                    source = Source.objects.get(**query)
                except (ObjectDoesNotExist, MultipleObjectsReturned):
                    source = None
            else:
                source = None
            if source:
                lead.source = source
                lead.save()


class Migration(migrations.Migration):

    dependencies = [
        ('source_channels', '0002_auto_20190125_1500'),
        ('leads', '0020_lead_source')
    ]

    operations = [
        migrations.RunPython(migrate_data, reverse_code=migrations.RunPython.noop),
    ]
